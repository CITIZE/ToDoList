{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79803\\\\Desktop\\\\todo fullstack 2\\\\client\\\\src\\\\widgets\\\\ToDoList\\\\ToDoList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Styles from \"./UI/styles.module.css\";\nimport { ToDoComponent } from \"../../entities/ToDoComponent/ToDoComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function fetchToDoList() {\n  try {\n    const token = localStorage.getItem(\"token\");\n    const res = await fetch(`http://localhost:6001/api/user/to-do-list`, {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"authorization\": `Bearer ${token}`\n      }\n    });\n    if (res.ok) {\n      const data = await res.json();\n      return data;\n    }\n  } catch (error) {\n    console.log(error);\n    return [];\n  }\n}\nasync function fetchDeleteToDo(id) {\n  try {\n    const token = localStorage.getItem(\"token\");\n    await fetch(`http://localhost:6001/api/user/to-do-list`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"authorization\": `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        id\n      })\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function ToDoList() {\n  _s();\n  const [toDoList, setToDoList] = useState([]);\n  function deleteToDo(id) {\n    setToDoList(preToDoList => preToDoList.filter(item => item.id !== id));\n    fetchDeleteToDo(id);\n    console.log(id);\n  }\n  useEffect(() => {\n    async function getToDoList() {\n      const result = await fetchToDoList();\n      if (result) {\n        setToDoList(result.reverse());\n      }\n    }\n    getToDoList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Styles.container,\n    children: toDoList.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Styles.flexContainer,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: Styles.noToDoH2,\n        children: \"Твой ТуДушка пуст :(\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 67\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }, this) : toDoList.map((item, index, arr) => /*#__PURE__*/_jsxDEV(ToDoComponent, {\n      funcDelete: deleteToDo,\n      ...item,\n      idInList: arr.length - index\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 3\n  }, this);\n}\n_s(ToDoList, \"87QZcye3c5n3sY3Ph3i9p4My1Nw=\");\n_c = ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useEffect","useState","Styles","ToDoComponent","jsxDEV","_jsxDEV","fetchToDoList","token","localStorage","getItem","res","fetch","method","headers","ok","data","json","error","console","log","fetchDeleteToDo","id","body","JSON","stringify","ToDoList","_s","toDoList","setToDoList","deleteToDo","preToDoList","filter","item","getToDoList","result","reverse","className","container","children","length","flexContainer","noToDoH2","fileName","_jsxFileName","lineNumber","columnNumber","map","index","arr","funcDelete","idInList","_c","$RefreshReg$"],"sources":["C:/Users/79803/Desktop/todo fullstack 2/client/src/widgets/ToDoList/ToDoList.tsx"],"sourcesContent":["import React, { useEffect, useState} from \"react\";\r\nimport Styles from \"./UI/styles.module.css\";\r\nimport { ToDoComponent } from \"../../entities/ToDoComponent/ToDoComponent\";\r\nimport { ToDo, ToDoId } from \"../../app/store\";\r\n\r\nexport type ToDoProps = ToDo & {\r\n\tfuncDelete: (id: number) => void,\r\n\tidInList: number\r\n}\r\n\r\nasync function fetchToDoList():Promise<ToDo[] | undefined> {\r\n\ttry {\r\n\t\tconst token = localStorage.getItem(\"token\");\r\n\t\tconst res = await fetch(`http://localhost:6001/api/user/to-do-list`, {\r\n\t\t\tmethod: \"GET\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-type\": \"application/json\",\r\n\t\t\t\t\"authorization\": `Bearer ${token}`\r\n\t\t\t}\r\n\t\t})\r\n\t\tif (res.ok) {\r\n\t\t\tconst data = await res.json();\r\n\t\t\treturn data as ToDo[];\r\n\t\t}\r\n\t} catch(error) {\r\n\t\tconsole.log(error);\r\n\t\treturn [];\r\n\t}\r\n}\r\n\r\nasync function fetchDeleteToDo(id: ToDoId):Promise<void> {\r\n\ttry {\r\n\t\tconst token = localStorage.getItem(\"token\");\r\n\t\tawait fetch(`http://localhost:6001/api/user/to-do-list`, {\r\n\t\t\tmethod: \"DELETE\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-type\": \"application/json\",\r\n\t\t\t\t\"authorization\": `Bearer ${token}`\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tid\r\n\t\t\t})\r\n\t\t})\r\n\t} catch(error) {\r\n\t\tconsole.log(error);\r\n\t}\r\n}\r\n\r\nexport function ToDoList() {\r\n\tconst [toDoList, setToDoList] = useState<ToDo[]>([]);\r\n\r\n\tfunction deleteToDo(id: ToDoId): void {\r\n\t\tsetToDoList(preToDoList => preToDoList.filter(item => item.id !== id));\r\n\t\tfetchDeleteToDo(id);console.log(id)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function getToDoList():Promise<void> {\r\n\t\t\tconst result: ToDo[] | undefined = await fetchToDoList();\r\n\t\t\tif (result) {\r\n\t\t\t\tsetToDoList(result.reverse());\r\n\t\t\t}\r\n\t\t}\r\n\t\tgetToDoList();\r\n\t}, [])\r\n\t\r\n\treturn (\r\n\t\t<div className={Styles.container}>\r\n\t\t {toDoList.length === 0 ? <div className={Styles.flexContainer}><h2 className={Styles.noToDoH2}>{\"Твой ТуДушка пуст :(\"}</h2></div> : (\r\n        toDoList.map((item: ToDo, index: number, arr: ToDo[]) => (\r\n          <ToDoComponent funcDelete={deleteToDo} key={item.id} {...item} idInList={arr.length - index} />\r\n        ))\r\n      )}\r\n\t\t</div>\r\n\t);\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}