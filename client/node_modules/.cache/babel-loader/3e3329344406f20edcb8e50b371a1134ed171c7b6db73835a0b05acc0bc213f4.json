{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79803\\\\Desktop\\\\todo fullstack 2\\\\client\\\\src\\\\widgets\\\\ToDoList\\\\ToDoList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useReducer, useRef } from \"react\";\nimport Styles from \"./UI/styles.module.css\";\nimport { ToDoComponent } from \"../../entities/ToDoComponent/ToDoComponent\";\nimport { store } from \"../../app/store\";\nimport { getMonth } from \"../../features/FormChoiceDate/getMonth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function fetchToDoList() {\n  try {\n    const token = localStorage.getItem(\"token\");\n    const res = await fetch(`http://localhost:6001/api/user/to-do-list`, {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"authorization\": `Bearer ${token}`\n      }\n    });\n    if (res.ok) {\n      const data = await res.json();\n      localStorage.setItem('todoListId', data.todoListId);\n      return data.toDos;\n    }\n  } catch (error) {\n    console.log(error);\n    return [];\n  }\n}\nasync function fetchDeleteToDo(id) {\n  try {\n    const token = localStorage.getItem(\"token\");\n    await fetch(`http://localhost:6001/api/user/to-do-list`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"authorization\": `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        id\n      })\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function ToDoList() {\n  _s();\n  const datesTasks = useRef([]);\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n  useEffect(() => {\n    const unsubscribe = store.subscribe(() => {\n      const datesSet = new Set(new Map(store.getState().toDos).keys());\n      const sortedDates = Array.from(datesSet).map(item => +item).sort((a, b) => a - b);\n      datesTasks.current = sortedDates;\n      forceUpdate();\n    });\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    async function getToDoList() {\n      const data = await fetchToDoList();\n      if (data) {\n        store.dispatch({\n          type: 'loadToDos',\n          payload: data\n        });\n      }\n    }\n    getToDoList();\n  }, []);\n  function getTimeDateToDo(dateIterator) {\n    const date = new Date(dateIterator);\n    const fullDateString = `${date.getDate()} ${getMonth(date.getMonth())} ${date.getFullYear() === new Date().getFullYear() ? '' : `${date.getFullYear()}г.`}`;\n    const timeString = date.getHours() === 0 && date.getMinutes() === 0 ? '' : getTime(date);\n    return `до ${fullDateString} ${timeString}`;\n  }\n  function getArrayTasks(dateIterator) {\n    const dataMap = new Map(store.getState().toDos);\n    return dataMap.get(`${dateIterator}`);\n  }\n  function deleteToDo(id, taskDateComplete) {\n    fetchDeleteToDo(id);\n    store.dispatch({\n      type: 'deleteToDo',\n      payload: {\n        id,\n        taskDateComplete\n      }\n    });\n  }\n  function getTime(date) {\n    let hours = `${date.getHours()}`;\n    let minutes = `${date.getMinutes()}`;\n    if (hours.length === 1) {\n      hours = '0' + hours;\n    }\n    if (minutes.length === 1) {\n      minutes = '0' + minutes;\n    }\n    return `${hours}:${minutes}`;\n  }\n  function moreHandlerClick(id, dateComplete) {\n    const tasks = new Map(store.getState().toDos);\n    console.log(tasks);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Styles.container,\n    children: store.getState().toDos.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Styles.flexContainer,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: Styles.noToDoH2,\n        children: \"Твой ТуДушка пуст :(\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 81\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 43\n    }, this) : datesTasks.current.map(dateIterator => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Styles.toDoContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: Styles.tasksH3,\n        children: getTimeDateToDo(dateIterator)\n      }, dateIterator, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }, this), getArrayTasks(dateIterator).map((todo, index) => /*#__PURE__*/_jsxDEV(ToDoComponent, {\n        moreHandlerClick: moreHandlerClick,\n        funcDelete: deleteToDo,\n        ...todo,\n        idInList: index + 1\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 10\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 6\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 3\n  }, this);\n}\n_s(ToDoList, \"n9bVkTcxahcjDvp/mXqjnXjxNJY=\");\n_c = ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useEffect","useReducer","useRef","Styles","ToDoComponent","store","getMonth","jsxDEV","_jsxDEV","fetchToDoList","token","localStorage","getItem","res","fetch","method","headers","ok","data","json","setItem","todoListId","toDos","error","console","log","fetchDeleteToDo","id","body","JSON","stringify","ToDoList","_s","datesTasks","forceUpdate","x","unsubscribe","subscribe","datesSet","Set","Map","getState","keys","sortedDates","Array","from","map","item","sort","a","b","current","getToDoList","dispatch","type","payload","getTimeDateToDo","dateIterator","date","Date","fullDateString","getDate","getFullYear","timeString","getHours","getMinutes","getTime","getArrayTasks","dataMap","get","deleteToDo","taskDateComplete","hours","minutes","length","moreHandlerClick","dateComplete","tasks","className","container","children","flexContainer","noToDoH2","fileName","_jsxFileName","lineNumber","columnNumber","toDoContainer","tasksH3","todo","index","funcDelete","idInList","_c","$RefreshReg$"],"sources":["C:/Users/79803/Desktop/todo fullstack 2/client/src/widgets/ToDoList/ToDoList.tsx"],"sourcesContent":["import React, { useEffect, useReducer, useRef} from \"react\";\r\nimport Styles from \"./UI/styles.module.css\";\r\nimport { ToDoComponent } from \"../../entities/ToDoComponent/ToDoComponent\";\r\nimport { LoadToDosAction, DeleteToDoAction, ToDo, ToDoId, store, ToDoDateComplete } from \"../../app/store\";\r\nimport { getMonth } from \"../../features/FormChoiceDate/getMonth\";\r\n\r\nexport type MoreHandlerClick = (id: ToDoId, dateComplete: ToDoDateComplete) => void;\r\n\r\nexport type ToDoProps = ToDo & {\r\n\tfuncDelete: (id: ToDoId, taskDateComplete: ToDoDateComplete) => void;\r\n\tidInList: number;\r\n\tmoreHandlerClick: MoreHandlerClick;\r\n}\r\n\r\nasync function fetchToDoList():Promise<ToDo[] | undefined> {\r\n\ttry {\r\n\t\tconst token = localStorage.getItem(\"token\");\r\n\t\tconst res = await fetch(`http://localhost:6001/api/user/to-do-list`, {\r\n\t\t\tmethod: \"GET\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-type\": \"application/json\",\r\n\t\t\t\t\"authorization\": `Bearer ${token}`\r\n\t\t\t}\r\n\t\t})\r\n\t\tif (res.ok) {\r\n\t\t\tconst data = await res.json();\r\n\t\t\tlocalStorage.setItem('todoListId', data.todoListId);\r\n\t\t\treturn data.toDos as ToDo[];\r\n\t\t}\r\n\t} catch(error) {\r\n\t\tconsole.log(error);\r\n\t\treturn [];\r\n\t}\r\n}\r\n\r\nasync function fetchDeleteToDo(id: ToDoId):Promise<void> {\r\n\ttry {\r\n\t\tconst token = localStorage.getItem(\"token\");\r\n\t\tawait fetch(`http://localhost:6001/api/user/to-do-list`, {\r\n\t\t\tmethod: \"DELETE\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-type\": \"application/json\",\r\n\t\t\t\t\"authorization\": `Bearer ${token}`\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tid\r\n\t\t\t})\r\n\t\t})\r\n\t} catch(error) {\r\n\t\tconsole.log(error);\r\n\t}\r\n}\r\n\r\n\r\n\r\nexport function ToDoList() {\r\n\tconst datesTasks = useRef<ToDoDateComplete[]>([]);\r\n\r\n\tconst [,forceUpdate] = useReducer(x => x + 1, 0);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst unsubscribe = store.subscribe(() => {\r\n\t\t\tconst datesSet = new Set<ToDoDateComplete>(new Map(store.getState().toDos).keys());\r\n\t\t\tconst sortedDates = Array.from(datesSet).map(item => +item).sort((a,b) => a - b);\r\n\t\t\tdatesTasks.current = sortedDates;\r\n\t\t\tforceUpdate();\r\n\t\t});\r\n\t\treturn unsubscribe;\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function getToDoList():Promise<void> {\r\n\t\t\tconst data: ToDo[] | undefined = await fetchToDoList();\r\n\t\t\t\r\n\t\t\tif (data) {\r\n\t\t\t\tstore.dispatch({type: 'loadToDos', payload: data} satisfies LoadToDosAction);\r\n\t\t\t}\r\n\t\t}\r\n\t\tgetToDoList();\r\n\t}, [])\r\n\r\n\tfunction getTimeDateToDo(dateIterator:ToDoDateComplete):string {\r\n\t\tconst date: Date = new Date(dateIterator);\r\n\t\tconst fullDateString = `${date.getDate()} ${getMonth(date.getMonth())} ${date.getFullYear() === new Date().getFullYear() ? '' : `${date.getFullYear()}г.`}`;\r\n\t\tconst timeString = date.getHours() === 0 && date.getMinutes() === 0 ? '' : getTime(date);\r\n\r\n\t\treturn `до ${fullDateString} ${timeString}`;\r\n\t}\r\n\tfunction getArrayTasks(dateIterator: ToDoDateComplete): ToDo[] {\r\n\t\tconst dataMap = new Map<number | string, ToDo[]>(store.getState().toDos);\r\n\t\treturn dataMap.get(`${dateIterator}`)!;\r\n\t}\r\n\r\n\tfunction deleteToDo(id: ToDoId, taskDateComplete: ToDoDateComplete): void {\r\n\t\tfetchDeleteToDo(id);\r\n\t\tstore.dispatch({type: 'deleteToDo', payload: {id, taskDateComplete}} satisfies DeleteToDoAction);\r\n\t}\r\n\r\n\tfunction getTime(date:Date):string {\r\n\t\tlet hours:string = `${date.getHours()}`;\r\n\t\tlet minutes:string = `${date.getMinutes()}`;\r\n\r\n\t\tif(hours.length === 1) {\r\n\t\t\thours = '0' + hours;\r\n\t\t}\r\n\t\tif(minutes.length === 1) {\r\n\t\t\tminutes = '0' + minutes;\r\n\t\t}\r\n\r\n\t\treturn `${hours}:${minutes}`\r\n\t}\r\n\r\n\tfunction moreHandlerClick(id, dateComplete):MoreHandlerClick {\r\n\t\tconst tasks = new Map(store.getState().toDos);\r\n\t\tconsole.log(tasks)\t\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={Styles.container}>\r\n\t\t {store.getState().toDos.length === 0 ? <div className={Styles.flexContainer}><h2 className={Styles.noToDoH2}>{\"Твой ТуДушка пуст :(\"}</h2></div> : \r\n\t\t\t\tdatesTasks.current.map(dateIterator => (\r\n\t\t\t\t\t<div className={Styles.toDoContainer}>\r\n\t\t\t\t\t\t<h3 className={Styles.tasksH3}key = {dateIterator}>{getTimeDateToDo(dateIterator)}</h3>\r\n\t\t\t\t\t\t\t{getArrayTasks(dateIterator).map((todo: ToDo, index: number) => (\r\n\t\t\t\t\t\t\t\t\t<ToDoComponent moreHandlerClick={moreHandlerClick} funcDelete={deleteToDo} key={todo.id} {...todo} idInList={index + 1} />\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))\r\n\t\t }\r\n\t\t</div>\r\n\t);\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,UAAU,EAAEC,MAAM,QAAO,OAAO;AAC3D,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,SAASC,aAAa,QAAQ,4CAA4C;AAC1E,SAA0DC,KAAK,QAA0B,iBAAiB;AAC1G,SAASC,QAAQ,QAAQ,wCAAwC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUlE,eAAeC,aAAaA,CAAA,EAA+B;EAC1D,IAAI;IACH,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,2CAA2C,EAAE;MACpEC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACR,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,UAAUN,KAAK;MACjC;IACD,CAAC,CAAC;IACF,IAAIG,GAAG,CAACI,EAAE,EAAE;MACX,MAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;MAC7BR,YAAY,CAACS,OAAO,CAAC,YAAY,EAAEF,IAAI,CAACG,UAAU,CAAC;MACnD,OAAOH,IAAI,CAACI,KAAK;IAClB;EACD,CAAC,CAAC,OAAMC,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClB,OAAO,EAAE;EACV;AACD;AAEA,eAAeG,eAAeA,CAACC,EAAU,EAAgB;EACxD,IAAI;IACH,MAAMjB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAME,KAAK,CAAC,2CAA2C,EAAE;MACxDC,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QACR,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,UAAUN,KAAK;MACjC,CAAC;MACDkB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACpBH;MACD,CAAC;IACF,CAAC,CAAC;EACH,CAAC,CAAC,OAAMJ,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACnB;AACD;AAIA,OAAO,SAASQ,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAMC,UAAU,GAAG/B,MAAM,CAAqB,EAAE,CAAC;EAEjD,MAAM,GAAEgC,WAAW,CAAC,GAAGjC,UAAU,CAACkC,CAAC,IAAIA,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;EAEhDnC,SAAS,CAAC,MAAM;IACf,MAAMoC,WAAW,GAAG/B,KAAK,CAACgC,SAAS,CAAC,MAAM;MACzC,MAAMC,QAAQ,GAAG,IAAIC,GAAG,CAAmB,IAAIC,GAAG,CAACnC,KAAK,CAACoC,QAAQ,CAAC,CAAC,CAACnB,KAAK,CAAC,CAACoB,IAAI,CAAC,CAAC,CAAC;MAClF,MAAMC,WAAW,GAAGC,KAAK,CAACC,IAAI,CAACP,QAAQ,CAAC,CAACQ,GAAG,CAACC,IAAI,IAAI,CAACA,IAAI,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAKD,CAAC,GAAGC,CAAC,CAAC;MAChFjB,UAAU,CAACkB,OAAO,GAAGR,WAAW;MAChCT,WAAW,CAAC,CAAC;IACd,CAAC,CAAC;IACF,OAAOE,WAAW;EACnB,CAAC,EAAE,EAAE,CAAC;EAENpC,SAAS,CAAC,MAAM;IACf,eAAeoD,WAAWA,CAAA,EAAiB;MAC1C,MAAMlC,IAAwB,GAAG,MAAMT,aAAa,CAAC,CAAC;MAEtD,IAAIS,IAAI,EAAE;QACTb,KAAK,CAACgD,QAAQ,CAAC;UAACC,IAAI,EAAE,WAAW;UAAEC,OAAO,EAAErC;QAAI,CAA2B,CAAC;MAC7E;IACD;IACAkC,WAAW,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,SAASI,eAAeA,CAACC,YAA6B,EAAS;IAC9D,MAAMC,IAAU,GAAG,IAAIC,IAAI,CAACF,YAAY,CAAC;IACzC,MAAMG,cAAc,GAAG,GAAGF,IAAI,CAACG,OAAO,CAAC,CAAC,IAAIvD,QAAQ,CAACoD,IAAI,CAACpD,QAAQ,CAAC,CAAC,CAAC,IAAIoD,IAAI,CAACI,WAAW,CAAC,CAAC,KAAK,IAAIH,IAAI,CAAC,CAAC,CAACG,WAAW,CAAC,CAAC,GAAG,EAAE,GAAG,GAAGJ,IAAI,CAACI,WAAW,CAAC,CAAC,IAAI,EAAE;IAC3J,MAAMC,UAAU,GAAGL,IAAI,CAACM,QAAQ,CAAC,CAAC,KAAK,CAAC,IAAIN,IAAI,CAACO,UAAU,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,GAAGC,OAAO,CAACR,IAAI,CAAC;IAExF,OAAO,MAAME,cAAc,IAAIG,UAAU,EAAE;EAC5C;EACA,SAASI,aAAaA,CAACV,YAA8B,EAAU;IAC9D,MAAMW,OAAO,GAAG,IAAI5B,GAAG,CAA0BnC,KAAK,CAACoC,QAAQ,CAAC,CAAC,CAACnB,KAAK,CAAC;IACxE,OAAO8C,OAAO,CAACC,GAAG,CAAC,GAAGZ,YAAY,EAAE,CAAC;EACtC;EAEA,SAASa,UAAUA,CAAC3C,EAAU,EAAE4C,gBAAkC,EAAQ;IACzE7C,eAAe,CAACC,EAAE,CAAC;IACnBtB,KAAK,CAACgD,QAAQ,CAAC;MAACC,IAAI,EAAE,YAAY;MAAEC,OAAO,EAAE;QAAC5B,EAAE;QAAE4C;MAAgB;IAAC,CAA4B,CAAC;EACjG;EAEA,SAASL,OAAOA,CAACR,IAAS,EAAS;IAClC,IAAIc,KAAY,GAAG,GAAGd,IAAI,CAACM,QAAQ,CAAC,CAAC,EAAE;IACvC,IAAIS,OAAc,GAAG,GAAGf,IAAI,CAACO,UAAU,CAAC,CAAC,EAAE;IAE3C,IAAGO,KAAK,CAACE,MAAM,KAAK,CAAC,EAAE;MACtBF,KAAK,GAAG,GAAG,GAAGA,KAAK;IACpB;IACA,IAAGC,OAAO,CAACC,MAAM,KAAK,CAAC,EAAE;MACxBD,OAAO,GAAG,GAAG,GAAGA,OAAO;IACxB;IAEA,OAAO,GAAGD,KAAK,IAAIC,OAAO,EAAE;EAC7B;EAEA,SAASE,gBAAgBA,CAAChD,EAAE,EAAEiD,YAAY,EAAmB;IAC5D,MAAMC,KAAK,GAAG,IAAIrC,GAAG,CAACnC,KAAK,CAACoC,QAAQ,CAAC,CAAC,CAACnB,KAAK,CAAC;IAC7CE,OAAO,CAACC,GAAG,CAACoD,KAAK,CAAC;EACnB;EAEA,oBACCrE,OAAA;IAAKsE,SAAS,EAAE3E,MAAM,CAAC4E,SAAU;IAAAC,QAAA,EAC/B3E,KAAK,CAACoC,QAAQ,CAAC,CAAC,CAACnB,KAAK,CAACoD,MAAM,KAAK,CAAC,gBAAGlE,OAAA;MAAKsE,SAAS,EAAE3E,MAAM,CAAC8E,aAAc;MAAAD,QAAA,eAACxE,OAAA;QAAIsE,SAAS,EAAE3E,MAAM,CAAC+E,QAAS;QAAAF,QAAA,EAAE;MAAsB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,GAC/IrD,UAAU,CAACkB,OAAO,CAACL,GAAG,CAACW,YAAY,iBAClCjD,OAAA;MAAKsE,SAAS,EAAE3E,MAAM,CAACoF,aAAc;MAAAP,QAAA,gBACpCxE,OAAA;QAAIsE,SAAS,EAAE3E,MAAM,CAACqF,OAAQ;QAAAR,QAAA,EAAsBxB,eAAe,CAACC,YAAY;MAAC,GAA5CA,YAAY;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqC,CAAC,EACrFnB,aAAa,CAACV,YAAY,CAAC,CAACX,GAAG,CAAC,CAAC2C,IAAU,EAAEC,KAAa,kBACzDlF,OAAA,CAACJ,aAAa;QAACuE,gBAAgB,EAAEA,gBAAiB;QAACgB,UAAU,EAAErB,UAAW;QAAA,GAAmBmB,IAAI;QAAEG,QAAQ,EAAEF,KAAK,GAAG;MAAE,GAAvCD,IAAI,CAAC9D,EAAE;QAAAwD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkC,CAC1H,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAER;AAACtD,EAAA,CA5EeD,QAAQ;AAAA8D,EAAA,GAAR9D,QAAQ;AAAA,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}