{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\n;\nconst initialState = {\n  toDos: []\n};\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"loadToDos\":\n      const dataMap = new Map(state.toDos);\n      for (const item of action.payload) {\n        const date = item.dateComplete;\n        if (dataMap.has(date)) {\n          const existingToDos = dataMap.get(date);\n          dataMap.set(date, [...existingToDos, item]);\n        } else {\n          dataMap.set(date, [item]);\n        }\n      }\n      return {\n        ...state,\n        toDos: Array.from(dataMap)\n      };\n    case \"addToDo\":\n      {\n        const date = `${action.payload.dateComplete}`;\n        const dataMap = new Map(state.toDos);\n        if (dataMap.has(date)) {\n          const existingToDos = dataMap.get(date);\n          dataMap.set(date, [...existingToDos, action.payload]);\n        } else {\n          dataMap.set(date, [action.payload]);\n        }\n        return {\n          ...state,\n          toDos: Array.from(dataMap)\n        };\n      }\n      ;\n    case \"deleteToDo\":\n      {\n        const dataMap = new Map(state.toDos);\n        const tasks = dataMap.get(action.payload.taskDateComplete);\n        const filteredTasks = tasks.filter(item => item.id !== action.payload.id);\n        if (filteredTasks.length !== 0) {\n          dataMap.set(action.payload.taskDateComplete, [...filteredTasks]);\n        } else {\n          dataMap.delete(action.payload.taskDateComplete);\n        }\n        return {\n          ...state,\n          toDos: Array.from(dataMap)\n        };\n      }\n      ;\n    default:\n      return state;\n  }\n};\nexport const store = configureStore({\n  reducer: reducer\n});","map":{"version":3,"names":["configureStore","initialState","toDos","reducer","state","action","type","dataMap","Map","item","payload","date","dateComplete","has","existingToDos","get","set","Array","from","tasks","taskDateComplete","filteredTasks","filter","id","length","delete","store"],"sources":["C:/Users/79803/Desktop/todo fullstack 2/client/src/app/store.ts"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nexport type ToDoId = number;\r\nexport type ToDoTitle = string;\r\nexport type ToDoDescription = string;\r\nexport type ToDoDateComplete = number | string;\r\n\r\nexport type ToDo = {\r\n\tid: ToDoId,\r\n\tdateComplete: ToDoDateComplete,\r\n\ttitle: ToDoTitle,\r\n\tdescription: ToDoDescription,\r\n\tisDone: boolean,\r\n\ttodoListId: number,\r\n\tcreatedAt?: string,\r\n\tupdatedAt?: string\r\n}\r\n\r\nexport type ToDoState = [ToDoDateComplete, ToDo[]][];;\r\n\r\nexport type AppState = {\r\n\ttoDos: ToDoState\r\n}\r\n\r\nexport type LoadToDosAction = {\r\n\ttype: 'loadToDos',\r\n\tpayload: ToDo[]\r\n}\r\n\r\nexport type AddToDoAction = {\r\n\ttype: 'addToDo',\r\n\tpayload: ToDo\r\n}\r\n\r\nexport type DeleteToDoAction = {\r\n\ttype: 'deleteToDo',\r\n\tpayload: {\r\n\t\tid: ToDoId,\r\n\t\ttaskDateComplete: ToDoDateComplete\r\n\t}\r\n}\r\n\r\ntype Action = LoadToDosAction | DeleteToDoAction | AddToDoAction;\r\n\r\nconst initialState: AppState = {\r\n\ttoDos: []\r\n}\r\n\r\n\r\nconst reducer = (state: AppState = initialState, action: Action) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"loadToDos\":\r\n\t\t\tconst dataMap = new Map<ToDoDateComplete, ToDo[]>(state.toDos);\r\n\t\t\tfor (const item of action.payload) {\r\n\t\t\t\tconst date:ToDoDateComplete = item.dateComplete;\r\n\r\n\t\t\t\tif(dataMap.has(date)) {\r\n\t\t\t\t\tconst existingToDos = dataMap.get(date)!;\r\n\t\t\t\t\tdataMap.set(date, [...existingToDos ,item]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdataMap.set(date, [item]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoDos: Array.from(dataMap)\r\n\t\t\t};\r\n\t\tcase \"addToDo\": {\r\n\t\t\tconst date = `${action.payload.dateComplete}`;\r\n\t\t\tconst dataMap = new Map<ToDoDateComplete, ToDo[]>(state.toDos);\r\n\t\t\tif (dataMap.has(date)) {\r\n\t\t\t\tconst existingToDos = dataMap.get(date)!;\r\n\t\t\t\tdataMap.set(date, [...existingToDos, action.payload])\r\n\t\t\t} else {\r\n\t\t\t\tdataMap.set(date, [action.payload]);\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoDos: Array.from(dataMap)\r\n\t\t\t}\r\n\t\t};\r\n\t\tcase \"deleteToDo\": {\r\n\t\t\tconst dataMap = new Map<ToDoDateComplete, ToDo[]>(state.toDos);\r\n\t\t\tconst tasks:ToDo[] = dataMap.get(action.payload.taskDateComplete)!;\r\n\t\t\tconst filteredTasks:ToDo[] | [] = tasks.filter(item => item.id !== action.payload.id);\r\n\t\t\tif (filteredTasks.length !== 0) {\r\n\t\t\t\tdataMap.set(action.payload.taskDateComplete, [...filteredTasks])\r\n\t\t\t} else {\r\n\t\t\t\tdataMap.delete(action.payload.taskDateComplete);\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoDos: Array.from(dataMap)\r\n\t\t\t}\r\n\t\t};\r\n\t\tdefault: \r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport const store = configureStore({\r\n\treducer: reducer,\r\n})"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AAkBI;AA0BrD,MAAMC,YAAsB,GAAG;EAC9BC,KAAK,EAAE;AACR,CAAC;AAGD,MAAMC,OAAO,GAAGA,CAACC,KAAe,GAAGH,YAAY,EAAEI,MAAc,KAAK;EACnE,QAAQA,MAAM,CAACC,IAAI;IAClB,KAAK,WAAW;MACf,MAAMC,OAAO,GAAG,IAAIC,GAAG,CAA2BJ,KAAK,CAACF,KAAK,CAAC;MAC9D,KAAK,MAAMO,IAAI,IAAIJ,MAAM,CAACK,OAAO,EAAE;QAClC,MAAMC,IAAqB,GAAGF,IAAI,CAACG,YAAY;QAE/C,IAAGL,OAAO,CAACM,GAAG,CAACF,IAAI,CAAC,EAAE;UACrB,MAAMG,aAAa,GAAGP,OAAO,CAACQ,GAAG,CAACJ,IAAI,CAAE;UACxCJ,OAAO,CAACS,GAAG,CAACL,IAAI,EAAE,CAAC,GAAGG,aAAa,EAAEL,IAAI,CAAC,CAAC;QAC5C,CAAC,MAAM;UACNF,OAAO,CAACS,GAAG,CAACL,IAAI,EAAE,CAACF,IAAI,CAAC,CAAC;QAC1B;MACD;MAEA,OAAO;QACN,GAAGL,KAAK;QACRF,KAAK,EAAEe,KAAK,CAACC,IAAI,CAACX,OAAO;MAC1B,CAAC;IACF,KAAK,SAAS;MAAE;QACf,MAAMI,IAAI,GAAG,GAAGN,MAAM,CAACK,OAAO,CAACE,YAAY,EAAE;QAC7C,MAAML,OAAO,GAAG,IAAIC,GAAG,CAA2BJ,KAAK,CAACF,KAAK,CAAC;QAC9D,IAAIK,OAAO,CAACM,GAAG,CAACF,IAAI,CAAC,EAAE;UACtB,MAAMG,aAAa,GAAGP,OAAO,CAACQ,GAAG,CAACJ,IAAI,CAAE;UACxCJ,OAAO,CAACS,GAAG,CAACL,IAAI,EAAE,CAAC,GAAGG,aAAa,EAAET,MAAM,CAACK,OAAO,CAAC,CAAC;QACtD,CAAC,MAAM;UACNH,OAAO,CAACS,GAAG,CAACL,IAAI,EAAE,CAACN,MAAM,CAACK,OAAO,CAAC,CAAC;QACpC;QACA,OAAO;UACN,GAAGN,KAAK;UACRF,KAAK,EAAEe,KAAK,CAACC,IAAI,CAACX,OAAO;QAC1B,CAAC;MACF;MAAC;IACD,KAAK,YAAY;MAAE;QAClB,MAAMA,OAAO,GAAG,IAAIC,GAAG,CAA2BJ,KAAK,CAACF,KAAK,CAAC;QAC9D,MAAMiB,KAAY,GAAGZ,OAAO,CAACQ,GAAG,CAACV,MAAM,CAACK,OAAO,CAACU,gBAAgB,CAAE;QAClE,MAAMC,aAAyB,GAAGF,KAAK,CAACG,MAAM,CAACb,IAAI,IAAIA,IAAI,CAACc,EAAE,KAAKlB,MAAM,CAACK,OAAO,CAACa,EAAE,CAAC;QACrF,IAAIF,aAAa,CAACG,MAAM,KAAK,CAAC,EAAE;UAC/BjB,OAAO,CAACS,GAAG,CAACX,MAAM,CAACK,OAAO,CAACU,gBAAgB,EAAE,CAAC,GAAGC,aAAa,CAAC,CAAC;QACjE,CAAC,MAAM;UACNd,OAAO,CAACkB,MAAM,CAACpB,MAAM,CAACK,OAAO,CAACU,gBAAgB,CAAC;QAChD;QACA,OAAO;UACN,GAAGhB,KAAK;UACRF,KAAK,EAAEe,KAAK,CAACC,IAAI,CAACX,OAAO;QAC1B,CAAC;MACF;MAAC;IACD;MACC,OAAOH,KAAK;EACd;AACD,CAAC;AAED,OAAO,MAAMsB,KAAK,GAAG1B,cAAc,CAAC;EACnCG,OAAO,EAAEA;AACV,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}