{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79803\\\\Desktop\\\\todo fullstack 2\\\\client\\\\src\\\\widgets\\\\ToDoList\\\\ToDoList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useReducer, useRef } from \"react\";\nimport Styles from \"./UI/styles.module.css\";\nimport { ToDoComponent } from \"../../entities/ToDoComponent/ToDoComponent\";\nimport { store } from \"../../app/store\";\nimport { getMonth } from \"../../features/FormChoiceDate/getMonth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function fetchToDoList() {\n  try {\n    const token = localStorage.getItem(\"token\");\n    const res = await fetch(`http://localhost:6001/api/user/to-do-list`, {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"authorization\": `Bearer ${token}`\n      }\n    });\n    if (res.ok) {\n      const data = await res.json();\n      localStorage.setItem('todoListId', data.todoListId);\n      return data.toDos;\n    }\n  } catch (error) {\n    console.log(error);\n    return [];\n  }\n}\nasync function fetchDeleteToDo(id) {\n  try {\n    const token = localStorage.getItem(\"token\");\n    await fetch(`http://localhost:6001/api/user/to-do-list`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"authorization\": `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        id\n      })\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function ToDoList() {\n  _s();\n  const datesTasks = useRef([]);\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n  useEffect(() => {\n    const unsubscribe = store.subscribe(() => {\n      forceUpdate();\n    });\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    async function getToDoList() {\n      const data = await fetchToDoList();\n      if (data) {\n        store.dispatch({\n          type: 'loadToDos',\n          payload: data\n        });\n        const datesSet = new Set(store.getState().toDos.keys());\n        const sortedDates = Array.from(datesSet).sort((a, b) => a - b);\n        datesTasks.current = sortedDates;\n      }\n    }\n    getToDoList();\n  }, []);\n  function renderToDo() {\n    const newTaskList = [];\n    const storeState = store.getState().toDos;\n    const storeStateMap = new Map(storeState);\n    datesTasks.current.forEach(dateIterator => {\n      const tasks = storeStateMap.get(dateIterator);\n      if (tasks) {\n        const date = new Date(dateIterator);\n        newTaskList.push(/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: `до ${date.getDate()} ${getMonth(date.getMonth())} ${date.getFullYear() === new Date().getFullYear() ? '' : `${date.getFullYear()}г.`} ${`${date.getHours()}:${date.getMinutes()}` === '0:0' ? '' : `${getTime(date)}`} `\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 6\n        }, this));\n        tasks.forEach(todo => {\n          newTaskList.push(/*#__PURE__*/_jsxDEV(ToDoComponent, {\n            funcDelete: deleteToDo,\n            ...todo,\n            idInList: 3\n          }, todo.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 7\n          }, this));\n        });\n      }\n    });\n    return newTaskList;\n  }\n  function deleteToDo(id, taskDateComplete) {\n    fetchDeleteToDo(id);\n    store.dispatch({\n      type: 'deleteToDo',\n      payload: {\n        id,\n        taskDateComplete\n      }\n    });\n  }\n  function getTime(date) {\n    let hours = `${date.getHours()}`;\n    let minutes = `${date.getMinutes()}`;\n    if (hours.length === 1) {\n      hours = '0' + hours;\n    }\n    if (minutes.length === 1) {\n      minutes = '0' + minutes;\n    }\n    return `${hours}:${minutes}`;\n  }\n  console.log();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Styles.container,\n    children: store.getState().toDos.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Styles.flexContainer,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: Styles.noToDoH2,\n        children: \"Твой ТуДушка пуст :(\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 82\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 44\n    }, this) : renderToDo()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 3\n  }, this);\n}\n_s(ToDoList, \"n9bVkTcxahcjDvp/mXqjnXjxNJY=\");\n_c = ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useEffect","useReducer","useRef","Styles","ToDoComponent","store","getMonth","jsxDEV","_jsxDEV","fetchToDoList","token","localStorage","getItem","res","fetch","method","headers","ok","data","json","setItem","todoListId","toDos","error","console","log","fetchDeleteToDo","id","body","JSON","stringify","ToDoList","_s","datesTasks","forceUpdate","x","unsubscribe","subscribe","getToDoList","dispatch","type","payload","datesSet","Set","getState","keys","sortedDates","Array","from","sort","a","b","current","renderToDo","newTaskList","storeState","storeStateMap","Map","forEach","dateIterator","tasks","get","date","Date","push","children","getDate","getFullYear","getHours","getMinutes","getTime","fileName","_jsxFileName","lineNumber","columnNumber","todo","funcDelete","deleteToDo","idInList","taskDateComplete","hours","minutes","length","className","container","flexContainer","noToDoH2","_c","$RefreshReg$"],"sources":["C:/Users/79803/Desktop/todo fullstack 2/client/src/widgets/ToDoList/ToDoList.tsx"],"sourcesContent":["import React, { useEffect, useReducer, useRef} from \"react\";\r\nimport Styles from \"./UI/styles.module.css\";\r\nimport { ToDoComponent } from \"../../entities/ToDoComponent/ToDoComponent\";\r\nimport { LoadToDosAction, DeleteToDoAction, ToDo, ToDoId, store, ToDoDateComplete } from \"../../app/store\";\r\nimport { getMonth } from \"../../features/FormChoiceDate/getMonth\";\r\n\r\nexport type ToDoProps = ToDo & {\r\n\tfuncDelete: (id: ToDoId, taskDateComplete: ToDoDateComplete) => void,\r\n\tidInList: number\r\n}\r\n\r\nasync function fetchToDoList():Promise<ToDo[] | undefined> {\r\n\ttry {\r\n\t\tconst token = localStorage.getItem(\"token\");\r\n\t\tconst res = await fetch(`http://localhost:6001/api/user/to-do-list`, {\r\n\t\t\tmethod: \"GET\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-type\": \"application/json\",\r\n\t\t\t\t\"authorization\": `Bearer ${token}`\r\n\t\t\t}\r\n\t\t})\r\n\t\tif (res.ok) {\r\n\t\t\tconst data = await res.json();\r\n\t\t\tlocalStorage.setItem('todoListId', data.todoListId);\r\n\t\t\treturn data.toDos as ToDo[];\r\n\t\t}\r\n\t} catch(error) {\r\n\t\tconsole.log(error);\r\n\t\treturn [];\r\n\t}\r\n}\r\n\r\nasync function fetchDeleteToDo(id: ToDoId):Promise<void> {\r\n\ttry {\r\n\t\tconst token = localStorage.getItem(\"token\");\r\n\t\tawait fetch(`http://localhost:6001/api/user/to-do-list`, {\r\n\t\t\tmethod: \"DELETE\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-type\": \"application/json\",\r\n\t\t\t\t\"authorization\": `Bearer ${token}`\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tid\r\n\t\t\t})\r\n\t\t})\r\n\t} catch(error) {\r\n\t\tconsole.log(error);\r\n\t}\r\n}\r\n\r\nexport function ToDoList() {\r\n\tconst datesTasks = useRef<ToDoDateComplete[]>([]);\r\n\r\n\tconst [,forceUpdate] = useReducer(x => x + 1, 0);\r\n\tuseEffect(() => {\r\n\t\tconst unsubscribe = store.subscribe(() => {\r\n\t\t\tforceUpdate();\r\n\t\t});\r\n\t\treturn unsubscribe;\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function getToDoList():Promise<void> {\r\n\t\t\tconst data: ToDo[] | undefined = await fetchToDoList();\r\n\t\t\t\r\n\t\t\tif (data) {\r\n\t\t\t\tstore.dispatch({type: 'loadToDos', payload: data} satisfies LoadToDosAction);\r\n\t\t\t\tconst datesSet = new Set<ToDoDateComplete>(store.getState().toDos.keys());\r\n\t\t\t\tconst sortedDates = Array.from(datesSet).sort((a,b) => a - b);\r\n\t\t\t\tdatesTasks.current = sortedDates;\r\n\t\t\t}\r\n\t\t}\r\n\t\tgetToDoList();\r\n\t}, [])\r\n\r\n\tfunction renderToDo():React.ReactNode {\r\n    const newTaskList: React.ReactNode[] = [];\r\n\t\tconst storeState = store.getState().toDos;\r\n\t\tconst storeStateMap = new Map(storeState)\r\n    datesTasks.current.forEach(dateIterator => {\r\n      const tasks = storeStateMap.get(dateIterator);\r\n\r\n      if (tasks) {\r\n\t\t\t\tconst date:Date = new Date(dateIterator);\r\n        newTaskList.push(\r\n\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t{`до ${date.getDate()} ${getMonth(date.getMonth())} ${date.getFullYear() === new Date().getFullYear() ? '' : `${date.getFullYear()}г.`} ${`${date.getHours()}:${date.getMinutes()}` === '0:0' ? '' : `${getTime(date)}`} `}\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t);\r\n\t\t\t\ttasks.forEach(todo => {\r\n\t\t\t\t\tnewTaskList.push(\r\n\t\t\t\t\t\t<ToDoComponent funcDelete={deleteToDo} key={todo.id} {...todo} idInList={3}/>\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n      }\r\n    });\r\n    return newTaskList;\r\n\t}\r\n\r\n\tfunction deleteToDo(id: ToDoId, taskDateComplete: ToDoDateComplete): void {\r\n\t\tfetchDeleteToDo(id);\r\n\t\tstore.dispatch({type: 'deleteToDo', payload: {id, taskDateComplete}} satisfies DeleteToDoAction);\r\n\t}\r\n\r\n\tfunction getTime(date:Date):string {\r\n\t\tlet hours:string = `${date.getHours()}`;\r\n\t\tlet minutes:string = `${date.getMinutes()}`;\r\n\r\n\t\tif(hours.length === 1) {\r\n\t\t\thours = '0' + hours;\r\n\t\t}\r\n\t\tif(minutes.length === 1) {\r\n\t\t\tminutes = '0' + minutes;\r\n\t\t}\r\n\r\n\t\treturn `${hours}:${minutes}`\r\n\t}\r\n\tconsole.log()\r\n\treturn (\r\n\t\t<div className={Styles.container}>\r\n\t\t {store.getState().toDos.length === 0 ? (<div className={Styles.flexContainer}><h2 className={Styles.noToDoH2}>{\"Твой ТуДушка пуст :(\"}</h2></div>) : renderToDo()}\r\n\t\t</div>\r\n\t);\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}