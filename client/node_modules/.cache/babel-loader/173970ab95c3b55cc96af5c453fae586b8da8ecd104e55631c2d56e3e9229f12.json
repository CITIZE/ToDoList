{"ast":null,"code":"export const minTimeFunction = dateInput => {\n  if (dateInput) {\n    const dateString = dateInput;\n    const date = dateString.split('-').map(item => parseInt(item));\n    let month = date[1] - 1;\n    let year = date[0];\n    let day = date[2];\n    const today = new Date();\n    let minutes = today.getMinutes() + 1 + '';\n    let hours = today.getHours() + '';\n    if (minutes.length < 2) {\n      minutes = '0' + minutes;\n    }\n    if (hours.length < 2) {\n      hours = '0' + hours;\n    }\n    if (year === today.getFullYear() && month === today.getMonth() && day === today.getDate()) {\n      return `${hours}:${minutes}`;\n    }\n  }\n  return '00:00';\n};","map":{"version":3,"names":["minTimeFunction","dateInput","dateString","date","split","map","item","parseInt","month","year","day","today","Date","minutes","getMinutes","hours","getHours","length","getFullYear","getMonth","getDate"],"sources":["C:/Users/Сергей/Desktop/Сайты/todo fullstack 2 — копия/client/src/features/FormChoiceDate/minTime.ts"],"sourcesContent":["import { MinTimeProps } from \"./FormChoiceDate\";\r\n\r\nexport const minTimeFunction = (dateInput:MinTimeProps):string => {\r\n\tif (dateInput) {\r\n\t\tconst dateString:string = dateInput;\r\n\t\tconst date:number[] = dateString.split('-').map(item => parseInt(item));\r\n\t\tlet month:number = date[1] - 1;\r\n\t\tlet year:number = date[0];\r\n\t\tlet day:number = date[2];\r\n\r\n\t\tconst today:Date = new Date();\r\n\t\tlet minutes:string = today.getMinutes() + 1 +'';\r\n\t\tlet hours:string = today.getHours() + '';\r\n\t\tif (minutes.length < 2) {\r\n\t\t\tminutes = '0' + minutes;\r\n\t\t}\r\n\t\tif(hours.length < 2) {\r\n\t\t\thours = '0' + hours;\r\n\t\t}\r\n\t\tif (year === today.getFullYear() && month === today.getMonth() && day === today.getDate()) {\r\n\t\t\treturn `${hours}:${minutes}`;\r\n\t\t}\r\n\t}\r\n\treturn '00:00'\r\n}"],"mappings":"AAEA,OAAO,MAAMA,eAAe,GAAIC,SAAsB,IAAY;EACjE,IAAIA,SAAS,EAAE;IACd,MAAMC,UAAiB,GAAGD,SAAS;IACnC,MAAME,IAAa,GAAGD,UAAU,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,IAAI,IAAIC,QAAQ,CAACD,IAAI,CAAC,CAAC;IACvE,IAAIE,KAAY,GAAGL,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC;IAC9B,IAAIM,IAAW,GAAGN,IAAI,CAAC,CAAC,CAAC;IACzB,IAAIO,GAAU,GAAGP,IAAI,CAAC,CAAC,CAAC;IAExB,MAAMQ,KAAU,GAAG,IAAIC,IAAI,CAAC,CAAC;IAC7B,IAAIC,OAAc,GAAGF,KAAK,CAACG,UAAU,CAAC,CAAC,GAAG,CAAC,GAAE,EAAE;IAC/C,IAAIC,KAAY,GAAGJ,KAAK,CAACK,QAAQ,CAAC,CAAC,GAAG,EAAE;IACxC,IAAIH,OAAO,CAACI,MAAM,GAAG,CAAC,EAAE;MACvBJ,OAAO,GAAG,GAAG,GAAGA,OAAO;IACxB;IACA,IAAGE,KAAK,CAACE,MAAM,GAAG,CAAC,EAAE;MACpBF,KAAK,GAAG,GAAG,GAAGA,KAAK;IACpB;IACA,IAAIN,IAAI,KAAKE,KAAK,CAACO,WAAW,CAAC,CAAC,IAAIV,KAAK,KAAKG,KAAK,CAACQ,QAAQ,CAAC,CAAC,IAAIT,GAAG,KAAKC,KAAK,CAACS,OAAO,CAAC,CAAC,EAAE;MAC1F,OAAO,GAAGL,KAAK,IAAIF,OAAO,EAAE;IAC7B;EACD;EACA,OAAO,OAAO;AACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}