{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79803\\\\Desktop\\\\todo fullstack 2\\\\client\\\\src\\\\features\\\\FormChoiceDate\\\\FormChoiceDate.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useMemo } from 'react';\nimport { Button } from '../../shared/Button/Button';\nimport Styles from './UI/styles.module.css';\nimport { minTimeFunction } from './minTime';\nimport { minDateFunction } from './minDate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function FormChoiceDate({\n  callback\n}) {\n  _s();\n  const [dateInput, setDateInput] = useState('');\n  const [isDisabledInputDay, setIsDisabledInputDay] = useState(true);\n  const timeInputRef = useRef(null);\n  const minTime = useMemo(() => {\n    return minTimeFunction(dateInput);\n  }, [dateInput]);\n  const minDate = useMemo(() => {\n    return minDateFunction();\n  }, []);\n  useEffect(() => {\n    if (dateInput) {\n      const dateString = dateInput;\n      const date = dateString.split('-').map(item => parseInt(item));\n      let month = date[1] - 1;\n      let year = date[0];\n      let day = date[2];\n      const today = new Date();\n      if (today.getFullYear() > year || today.getFullYear() === year && today.getMonth() > month || today.getFullYear() === year && today.getMonth() === month && today.getDate() > day || year >= 2200) {\n        setIsDisabledInputDay(true);\n      } else {\n        setIsDisabledInputDay(false);\n      }\n    } else {\n      setIsDisabledInputDay(true);\n    }\n  }, [dateInput]);\n  function handlerFormDateSubmit(e) {\n    e.preventDefault();\n    if (dateInput) {\n      const dateString = dateInput;\n      const dateNumberArray = dateString.split('-').map(item => parseInt(item));\n      const year = dateNumberArray[0];\n      const month = dateNumberArray[1] - 1;\n      const day = dateNumberArray[2];\n      if (timeInputRef.current && timeInputRef.current.value) {\n        const timeString = timeInputRef.current.value;\n        const timeNumberArray = timeString.split(':').map(item => parseInt(item));\n        const hours = timeNumberArray[0];\n        const minutes = timeNumberArray[1];\n        const date = new Date(year, month, day, hours, minutes);\n        callback(true, date, false, timeInputRef.current.value);\n      } else {\n        const date = new Date(year, month, day, 0, 0);\n        callback(true, date, false);\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Styles.formDateContainer,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: Styles.formDate,\n      onSubmit: handlerFormDateSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: Styles.inputContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"input3\",\n          children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          min: minDate,\n          id: \"input3\",\n          type: \"date\",\n          className: Styles.formAddToDoInput,\n          value: dateInput,\n          onChange: e => setDateInput(e.target.value),\n          max: \"2199-12-31\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Styles.inputContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"input4\",\n          children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0432\\u0440\\u0435\\u043C\\u044F (\\u043D\\u0435\\u043E\\u0431\\u044F\\u0437\\u0430\\u0442\\u0435\\u044C\\u043D\\u043E\\u0435 \\u043F\\u043E\\u043B\\u0435): \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          min: minTime,\n          id: \"input4\",\n          type: \"time\",\n          className: Styles.formAddToDoInput,\n          disabled: isDisabledInputDay,\n          ref: timeInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: 1,\n        children: \"\\u041E\\u043A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 3\n  }, this);\n}\n_s(FormChoiceDate, \"uEtRyRCGkcPaiH5M10PvnFQhQVw=\");\n_c = FormChoiceDate;\nvar _c;\n$RefreshReg$(_c, \"FormChoiceDate\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useMemo","Button","Styles","minTimeFunction","minDateFunction","jsxDEV","_jsxDEV","FormChoiceDate","callback","_s","dateInput","setDateInput","isDisabledInputDay","setIsDisabledInputDay","timeInputRef","minTime","minDate","dateString","date","split","map","item","parseInt","month","year","day","today","Date","getFullYear","getMonth","getDate","handlerFormDateSubmit","e","preventDefault","dateNumberArray","current","value","timeString","timeNumberArray","hours","minutes","className","formDateContainer","children","formDate","onSubmit","inputContainer","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","min","id","type","formAddToDoInput","onChange","target","max","disabled","ref","_c","$RefreshReg$"],"sources":["C:/Users/79803/Desktop/todo fullstack 2/client/src/features/FormChoiceDate/FormChoiceDate.tsx"],"sourcesContent":["import React, {useState, useRef, useEffect, useMemo} from 'react';\r\nimport { Button } from '../../shared/Button/Button';\r\nimport Styles from './UI/styles.module.css';\r\nimport { minTimeFunction } from './minTime';\r\nimport { minDateFunction } from './minDate';\r\n\r\nexport type MinTimeProps = string;\r\nexport type GetTimeProps = HTMLInputElement;\r\ntype FormChoiceDateProps = {\r\n\tcallback: (isChoiceDateActionProp: boolean, dateCompletedProp:Date, isChoiceDateProp:boolean, getTimeProp: string) => void\r\n};\r\n\r\nexport function FormChoiceDate({callback}: FormChoiceDateProps) {\r\n\tconst [dateInput, setDateInput] = useState<string>('');\r\n\tconst [isDisabledInputDay, setIsDisabledInputDay] = useState<boolean>(true);\r\n\r\n\tconst timeInputRef = useRef<HTMLInputElement>(null);\r\n\r\n\tconst minTime = useMemo(() => {\r\n\t\treturn minTimeFunction(dateInput)\r\n\t}, [dateInput]);\r\n\r\n\tconst minDate = useMemo(() => {\r\n\t\treturn minDateFunction();\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (dateInput) {\r\n\t\t\tconst dateString:string = dateInput;\r\n\t\t\tconst date:number[] = dateString.split('-').map(item => parseInt(item));\r\n\t\t\tlet month:number = date[1] - 1;\r\n\t\t\tlet year:number = date[0];\r\n\t\t\tlet day:number = date[2];\r\n\r\n\t\t\tconst today:Date = new Date();\r\n\t\t\tif (today.getFullYear() > year || (today.getFullYear() === year && today.getMonth() > month) ||(today.getFullYear() === year && today.getMonth() === month && today.getDate() > day) || year >= 2200){\r\n\t\t\t\tsetIsDisabledInputDay(true);\r\n\t\t\t} else {\r\n\t\t\t\tsetIsDisabledInputDay(false);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsetIsDisabledInputDay(true);\r\n\t\t}\r\n\t}, [dateInput])\r\n\r\n\tfunction handlerFormDateSubmit(e: React.FormEvent<HTMLFormElement>):void {\r\n\t\te.preventDefault();\r\n\t\tif (dateInput) {\r\n\t\t\tconst dateString:string = dateInput;\r\n\t\t\tconst dateNumberArray:number[] = dateString.split('-').map(item => parseInt(item));\r\n\t\t\tconst year:number = dateNumberArray[0];\r\n\t\t\tconst month:number = dateNumberArray[1] - 1;\r\n\t\t\tconst day:number = dateNumberArray[2];\r\n\t\t\tif (timeInputRef.current && timeInputRef.current.value) {\r\n\t\t\t\tconst timeString:string = timeInputRef.current.value;\r\n\t\t\t\tconst timeNumberArray:number[] = timeString.split(':').map(item => parseInt(item));\r\n\t\t\t\tconst hours:number = timeNumberArray[0];\r\n\t\t\t\tconst minutes:number = timeNumberArray[1];\r\n\r\n\t\t\t\tconst date:Date = new Date(year, month, day, hours, minutes);\r\n\t\t\t\tcallback(true, date, false, timeInputRef.current.value);\r\n\t\t\t} else {\r\n\t\t\t\tconst date:Date = new Date(year, month, day, 0,0);\r\n\t\t\t\tcallback(true, date, false);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div  className={Styles.formDateContainer}>\r\n\t\t\t<form  className={Styles.formDate} onSubmit={handlerFormDateSubmit}>\r\n\t\t\t<div className={Styles.inputContainer}>\r\n\t\t\t\t<label htmlFor=\"input3\">Выберите дату: </label>\r\n\t\t\t\t<input min={minDate} id=\"input3\" type=\"date\" className={Styles.formAddToDoInput} value={dateInput} onChange={(e) => setDateInput(e.target.value)} max={\"2199-12-31\"}/>\r\n\t\t\t</div>\r\n\t\t\t<div className={Styles.inputContainer}>\r\n\t\t\t\t<label htmlFor=\"input4\">Выберите время (необязатеьное поле): </label>\r\n\t\t\t\t<input min={minTime} id=\"input4\" type=\"time\" className={Styles.formAddToDoInput} disabled={isDisabledInputDay} ref={timeInputRef}/>\r\n\t\t\t</div>\r\n\t\t\t\t<Button type={1}>Ок</Button>\r\n\t\t\t</form>\r\n\t\t</div>);\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}